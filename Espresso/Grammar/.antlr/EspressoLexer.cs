//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:\Users\garng\source\repos\Espresso\Espresso\Grammar\Espresso.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


#pragma warning disable 3021
using Espresso;

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class EspressoLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		TRUE=1, FALSE=2, E=3, NAME=4, LETTER=5, NUMBER=6, DOT=7, OPEN_PARENTHESIS=8, 
		CLOSE_PARENTHESIS=9, OPEN_SQUARE_BRACKETS=10, CLOSE_SQUARE_BRACKETS=11, 
		OPEN_CURLY_BRACKET=12, CLOSE_CURLY_BRACKET=13, SEMICOLON=14, ASTERISK=15, 
		COMMA=16, CARET=17, DIV=18, EXCLAMATION=19, MINUS=20, MUL=21, PERCENT=22, 
		PLUS=23, SLASH=24, VBAR=25, UNDERSCORE=26, PI=27, WHITESPACE=28, ANY=29;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"TRUE", "FALSE", "E", "NAME", "LETTER", "NUMBER", "DOT", "DIGIT", "OPEN_PARENTHESIS", 
		"CLOSE_PARENTHESIS", "OPEN_SQUARE_BRACKETS", "CLOSE_SQUARE_BRACKETS", 
		"OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "SEMICOLON", "ASTERISK", 
		"COMMA", "CARET", "DIV", "EXCLAMATION", "MINUS", "MUL", "PERCENT", "PLUS", 
		"SLASH", "VBAR", "UNDERSCORE", "PI", "WHITESPACE", "ANY"
	};


	public EspressoLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public EspressoLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'true'", "'false'", "'E'", null, null, null, "'.'", "'('", "')'", 
		"'['", "']'", "'{'", "'}'", "';'", "'*'", "','", "'^'", "'\u00C3\u00B7'", 
		"'!'", null, "'\u00C3\u2014'", "'%'", "'+'", "'/'", "'|'", "'_'", "'\u00CF\u20AC'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TRUE", "FALSE", "E", "NAME", "LETTER", "NUMBER", "DOT", "OPEN_PARENTHESIS", 
		"CLOSE_PARENTHESIS", "OPEN_SQUARE_BRACKETS", "CLOSE_SQUARE_BRACKETS", 
		"OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "SEMICOLON", "ASTERISK", 
		"COMMA", "CARET", "DIV", "EXCLAMATION", "MINUS", "MUL", "PERCENT", "PLUS", 
		"SLASH", "VBAR", "UNDERSCORE", "PI", "WHITESPACE", "ANY"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Espresso.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static EspressoLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1F', '\xA3', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x6', '\x5', 'P', '\n', '\x5', '\r', '\x5', '\xE', '\x5', 'Q', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x6', '\a', 'W', '\n', '\a', 
		'\r', '\a', '\xE', '\a', 'X', '\x3', '\a', '\x3', '\a', '\x6', '\a', ']', 
		'\n', '\a', '\r', '\a', '\xE', '\a', '^', '\x5', '\a', '\x61', '\n', '\a', 
		'\x3', '\a', '\x3', '\a', '\x6', '\a', '\x65', '\n', '\a', '\r', '\a', 
		'\xE', '\a', '\x66', '\x5', '\a', 'i', '\n', '\a', '\x3', '\b', '\x3', 
		'\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x5', '\x16', '\x8C', '\n', '\x16', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', 
		'\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', 
		'\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', 
		'\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', 
		'\x2', '\x2', ' ', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', 
		'\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\x2', '\x13', '\n', '\x15', 
		'\v', '\x17', '\f', '\x19', '\r', '\x1B', '\xE', '\x1D', '\xF', '\x1F', 
		'\x10', '!', '\x11', '#', '\x12', '%', '\x13', '\'', '\x14', ')', '\x15', 
		'+', '\x16', '-', '\x17', '/', '\x18', '\x31', '\x19', '\x33', '\x1A', 
		'\x35', '\x1B', '\x37', '\x1C', '\x39', '\x1D', ';', '\x1E', '=', '\x1F', 
		'\x3', '\x2', '\x5', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x3', '\x2', 
		'\x32', ';', '\x5', '\x2', '\v', '\f', '\xE', '\xF', '\"', '\"', '\x2', 
		'\xAA', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', 
		'\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x39', '\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '=', '\x3', '\x2', '\x2', '\x2', '\x3', '?', '\x3', '\x2', '\x2', 
		'\x2', '\x5', '\x44', '\x3', '\x2', '\x2', '\x2', '\a', 'J', '\x3', '\x2', 
		'\x2', '\x2', '\t', 'O', '\x3', '\x2', '\x2', '\x2', '\v', 'S', '\x3', 
		'\x2', '\x2', '\x2', '\r', 'h', '\x3', '\x2', '\x2', '\x2', '\xF', 'j', 
		'\x3', '\x2', '\x2', '\x2', '\x11', 'l', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'n', '\x3', '\x2', '\x2', '\x2', '\x15', 'p', '\x3', '\x2', '\x2', '\x2', 
		'\x17', 'r', '\x3', '\x2', '\x2', '\x2', '\x19', 't', '\x3', '\x2', '\x2', 
		'\x2', '\x1B', 'v', '\x3', '\x2', '\x2', '\x2', '\x1D', 'x', '\x3', '\x2', 
		'\x2', '\x2', '\x1F', 'z', '\x3', '\x2', '\x2', '\x2', '!', '|', '\x3', 
		'\x2', '\x2', '\x2', '#', '~', '\x3', '\x2', '\x2', '\x2', '%', '\x80', 
		'\x3', '\x2', '\x2', '\x2', '\'', '\x82', '\x3', '\x2', '\x2', '\x2', 
		')', '\x85', '\x3', '\x2', '\x2', '\x2', '+', '\x8B', '\x3', '\x2', '\x2', 
		'\x2', '-', '\x8D', '\x3', '\x2', '\x2', '\x2', '/', '\x90', '\x3', '\x2', 
		'\x2', '\x2', '\x31', '\x92', '\x3', '\x2', '\x2', '\x2', '\x33', '\x94', 
		'\x3', '\x2', '\x2', '\x2', '\x35', '\x96', '\x3', '\x2', '\x2', '\x2', 
		'\x37', '\x98', '\x3', '\x2', '\x2', '\x2', '\x39', '\x9A', '\x3', '\x2', 
		'\x2', '\x2', ';', '\x9D', '\x3', '\x2', '\x2', '\x2', '=', '\xA1', '\x3', 
		'\x2', '\x2', '\x2', '?', '@', '\a', 'v', '\x2', '\x2', '@', '\x41', '\a', 
		't', '\x2', '\x2', '\x41', '\x42', '\a', 'w', '\x2', '\x2', '\x42', '\x43', 
		'\a', 'g', '\x2', '\x2', '\x43', '\x4', '\x3', '\x2', '\x2', '\x2', '\x44', 
		'\x45', '\a', 'h', '\x2', '\x2', '\x45', '\x46', '\a', '\x63', '\x2', 
		'\x2', '\x46', 'G', '\a', 'n', '\x2', '\x2', 'G', 'H', '\a', 'u', '\x2', 
		'\x2', 'H', 'I', '\a', 'g', '\x2', '\x2', 'I', '\x6', '\x3', '\x2', '\x2', 
		'\x2', 'J', 'K', '\a', 'G', '\x2', '\x2', 'K', '\b', '\x3', '\x2', '\x2', 
		'\x2', 'L', 'P', '\x5', '\v', '\x6', '\x2', 'M', 'P', '\x5', '\x37', '\x1C', 
		'\x2', 'N', 'P', '\x5', '\x39', '\x1D', '\x2', 'O', 'L', '\x3', '\x2', 
		'\x2', '\x2', 'O', 'M', '\x3', '\x2', '\x2', '\x2', 'O', 'N', '\x3', '\x2', 
		'\x2', '\x2', 'P', 'Q', '\x3', '\x2', '\x2', '\x2', 'Q', 'O', '\x3', '\x2', 
		'\x2', '\x2', 'Q', 'R', '\x3', '\x2', '\x2', '\x2', 'R', '\n', '\x3', 
		'\x2', '\x2', '\x2', 'S', 'T', '\t', '\x2', '\x2', '\x2', 'T', '\f', '\x3', 
		'\x2', '\x2', '\x2', 'U', 'W', '\x5', '\x11', '\t', '\x2', 'V', 'U', '\x3', 
		'\x2', '\x2', '\x2', 'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', 'V', '\x3', 
		'\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 'Y', '`', '\x3', 
		'\x2', '\x2', '\x2', 'Z', '\\', '\x5', '\xF', '\b', '\x2', '[', ']', '\x5', 
		'\x11', '\t', '\x2', '\\', '[', '\x3', '\x2', '\x2', '\x2', ']', '^', 
		'\x3', '\x2', '\x2', '\x2', '^', '\\', '\x3', '\x2', '\x2', '\x2', '^', 
		'_', '\x3', '\x2', '\x2', '\x2', '_', '\x61', '\x3', '\x2', '\x2', '\x2', 
		'`', 'Z', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\x3', '\x2', '\x2', 
		'\x2', '\x61', 'i', '\x3', '\x2', '\x2', '\x2', '\x62', '\x64', '\x5', 
		'\xF', '\b', '\x2', '\x63', '\x65', '\x5', '\x11', '\t', '\x2', '\x64', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\x3', '\x2', '\x2', 
		'\x2', '\x66', '\x64', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\x3', 
		'\x2', '\x2', '\x2', 'g', 'i', '\x3', '\x2', '\x2', '\x2', 'h', 'V', '\x3', 
		'\x2', '\x2', '\x2', 'h', '\x62', '\x3', '\x2', '\x2', '\x2', 'i', '\xE', 
		'\x3', '\x2', '\x2', '\x2', 'j', 'k', '\a', '\x30', '\x2', '\x2', 'k', 
		'\x10', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\t', '\x3', '\x2', '\x2', 
		'm', '\x12', '\x3', '\x2', '\x2', '\x2', 'n', 'o', '\a', '*', '\x2', '\x2', 
		'o', '\x14', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\a', '+', '\x2', '\x2', 
		'q', '\x16', '\x3', '\x2', '\x2', '\x2', 'r', 's', '\a', ']', '\x2', '\x2', 
		's', '\x18', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\a', '_', '\x2', '\x2', 
		'u', '\x1A', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', '}', '\x2', '\x2', 
		'w', '\x1C', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', '\x7F', '\x2', 
		'\x2', 'y', '\x1E', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\a', '=', '\x2', 
		'\x2', '{', ' ', '\x3', '\x2', '\x2', '\x2', '|', '}', '\a', ',', '\x2', 
		'\x2', '}', '\"', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\a', '.', 
		'\x2', '\x2', '\x7F', '$', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', 
		'\a', '`', '\x2', '\x2', '\x81', '&', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x83', '\a', '\xC5', '\x2', '\x2', '\x83', '\x84', '\a', '\xB9', '\x2', 
		'\x2', '\x84', '(', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', '\a', 
		'#', '\x2', '\x2', '\x86', '*', '\x3', '\x2', '\x2', '\x2', '\x87', '\x8C', 
		'\a', '/', '\x2', '\x2', '\x88', '\x89', '\a', '\xE4', '\x2', '\x2', '\x89', 
		'\x8A', '\a', '\x2C8', '\x2', '\x2', '\x8A', '\x8C', '\a', '\x201B', '\x2', 
		'\x2', '\x8B', '\x87', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x88', '\x3', 
		'\x2', '\x2', '\x2', '\x8C', ',', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8E', '\a', '\xC5', '\x2', '\x2', '\x8E', '\x8F', '\a', '\x2016', '\x2', 
		'\x2', '\x8F', '.', '\x3', '\x2', '\x2', '\x2', '\x90', '\x91', '\a', 
		'\'', '\x2', '\x2', '\x91', '\x30', '\x3', '\x2', '\x2', '\x2', '\x92', 
		'\x93', '\a', '-', '\x2', '\x2', '\x93', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\x94', '\x95', '\a', '\x31', '\x2', '\x2', '\x95', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\x96', '\x97', '\a', '~', '\x2', '\x2', '\x97', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\a', '\x61', '\x2', 
		'\x2', '\x99', '\x38', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', '\a', 
		'\xD1', '\x2', '\x2', '\x9B', '\x9C', '\a', '\x20AE', '\x2', '\x2', '\x9C', 
		':', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', '\t', '\x4', '\x2', '\x2', 
		'\x9E', '\x9F', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', '\b', '\x1E', 
		'\x2', '\x2', '\xA0', '<', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA2', 
		'\v', '\x2', '\x2', '\x2', '\xA2', '>', '\x3', '\x2', '\x2', '\x2', '\v', 
		'\x2', 'O', 'Q', 'X', '^', '`', '\x66', 'h', '\x8B', '\x3', '\x2', '\x3', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
